// <auto-generated />
using AspNetCoreApplication;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AspNetCoreApplication.Migrations
{
    [DbContext(typeof(AspNetCoreApplicationDbContext))]
    [Migration("20171130102111_Addcategory")]
    partial class Addcategory
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AspNetCoreApplication.Model.BusinessUnit", b =>
                {
                    b.Property<Guid>("BusinessUnitId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("BusinessUnitId");

                    b.ToTable("BusinessUnit");
                });

            modelBuilder.Entity("AspNetCoreApplication.Model.Campaign", b =>
                {
                    b.Property<Guid>("CampaignId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsClose");

                    b.Property<bool>("ManagerLock");

                    b.Property<int>("MaximumWishes");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("StartDate");

                    b.Property<bool>("UserLock");

                    b.Property<DateTime>("Year");

                    b.HasKey("CampaignId");

                    b.ToTable("Campaign","dbo");
                });

            modelBuilder.Entity("AspNetCoreApplication.Model.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("ImageUrl");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("AspNetCoreApplication.Model.Modality", b =>
                {
                    b.Property<Guid>("ModalityId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("ModalityId");

                    b.ToTable("Modality","dbo");
                });

            modelBuilder.Entity("AspNetCoreApplication.Model.Organization", b =>
                {
                    b.Property<Guid>("OrganizationId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("OrganizationId");

                    b.ToTable("Organization","dbo");
                });

            modelBuilder.Entity("AspNetCoreApplication.Model.Training", b =>
                {
                    b.Property<Guid>("TrainingId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("AverageCost");

                    b.Property<Guid>("BusinessUnitId");

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("ConcernedPublic");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<int>("DurationInDays");

                    b.Property<string>("EducationalObjectives");

                    b.Property<string>("ExternalLinks");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsApproved");

                    b.Property<string>("IsCPF");

                    b.Property<bool>("IsFree");

                    b.Property<string>("Language");

                    b.Property<string>("Location");

                    b.Property<Guid>("ModalityId");

                    b.Property<string>("Name");

                    b.Property<Guid>("OrganizationId");

                    b.Property<string>("OthersEducationalObjectives");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("StartDate");

                    b.HasKey("TrainingId");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ModalityId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Training","dbo");
                });

            modelBuilder.Entity("AspNetCoreApplication.Model.Training", b =>
                {
                    b.HasOne("AspNetCoreApplication.Model.BusinessUnit", "BusinessUnit")
                        .WithMany("Training")
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreApplication.Model.Category", "Category")
                        .WithMany("Training")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreApplication.Model.Modality", "Modality")
                        .WithMany("Training")
                        .HasForeignKey("ModalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AspNetCoreApplication.Model.Organization", "Organization")
                        .WithMany("Training")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
